# Australian Tax Office Receipt Extraction Prompts
# This file contains prompts for extracting information from Australian receipts

# Default prompt for receipt information extraction
default_receipt_prompt: |
  <image>
  Extract these fields from the provided Australian receipt:
  1. date_value: The date of purchase (DD/MM/YYYY)
  2. store_name_value: The name of the Australian store or company
  3. tax_value: The GST (10% tax) amount
  4. total_value: The total purchase amount
  5. prod_item_value: List of product items purchased
  6. prod_quantity_value: List of quantities for each product
  7. prod_price_value: List of prices for each product

  Return the results in a valid JSON format:
  {
    "date_value": "DATE OF PURCHASE",
    "store_name_value": "NAME OF STORE",
    "tax_value": "GST AMOUNT",
    "total_value": "TOTAL AMOUNT",
    "prod_item_value": ["ITEM1", "ITEM2", ...],
    "prod_quantity_value": [QUANTITY1, QUANTITY2, ...],
    "prod_price_value": [PRICE1, PRICE2, ...]
  }

  Important notes for Australian receipts:
  - GST (Goods and Services Tax) is 10% in Australia
  - Dates are typically in DD/MM/YYYY format
  - Major Australian retailers include Woolworths, Coles, ALDI, Bunnings, Kmart, etc.
  - Store names should be in all capitals as they typically appear on receipts
  - Ensure all lists have matching lengths
  - If a field cannot be found, use an empty string or empty list as appropriate
  - Total amount should include GST

# Simple prompt for minimal, direct extraction
simple_receipt_prompt: |
  <image>
  Extract information from this receipt and return it in JSON format.

# Strict JSON-only prompt
strict_json_prompt: |
  <image>
  Extract these seven fields from the provided Australian receipt image:
  1. date_value
  2. store_name_value
  3. tax_value (GST amount)
  4. total_value
  5. prod_item_value
  6. prod_quantity_value
  7. prod_price_value

  Return the results in JSON format. An example JSON format is:

  JSON Output:
  {
  "date_value": "16/3/2023",
  "store_name_value": "WOOLWORTHS METRO",
  "tax_value": "3.82",
  "total_value": "42.08",
  "prod_item_value": [
  "MILK 2L",
  "BREAD MULTIGRAIN",
  "EGGS FREE RANGE 12PK"
  ],
  "prod_quantity_value": [
  "1",
  "2",
  "1"
  ],
  "prod_price_value": [
  "4.50",
  "8.00",
  "7.60"
  ]
  }

  Only return the values for the seven keys specified. Do not return any additional key-value pairs.
  Do not output any additional information, notes, reasoning, or explanations. Output only the valid JSON.

# Detailed prompt with field explanations
detailed_receipt_prompt: |
  <image>
  Extract these seven fields from the provided Australian receipt image:
  1. date_value
  2. store_name_value
  3. tax_value (GST amount)
  4. total_value
  5. prod_item_value
  6. prod_quantity_value
  7. prod_price_value

  Return the results in JSON format. An example JSON format is:

  JSON Output:
  {
  "date_value": "16/3/2023",
  "store_name_value": "WOOLWORTHS METRO",
  "tax_value": "3.82",
  "total_value": "42.08",
  "prod_item_value": [
  "MILK 2L",
  "BREAD MULTIGRAIN",
  "EGGS FREE RANGE 12PK"
  ],
  "prod_quantity_value": [
  "1",
  "2",
  "1"
  ],
  "prod_price_value": [
  "4.50",
  "8.00",
  "7.60"
  ]
  }

  For the key "date_value" return the date in the image.
  For the key "store_name_value" return the name of the store in the image.
  For the key "tax_value" return the GST (Australian Goods and Services Tax) amount in the image.
  For the key "total_value" return the total including GST in the image.
  For the key "prod_item_value" return the description of each item purchased in the image. If there is more than one, return them all in a list.
  For the key "prod_quantity_value" return the number of each type of item purchased in the image. If there is more than one, return them all in a list.
  For the key "prod_price_value" return the total cost of each type of item purchased in the image. If there is more than one, return them all in a list.
  Only return the values for the seven keys specified. Do not return any additional key-value pairs.
  Do not output any additional information, notes, reasoning, or explanations. Output only the valid JSON that starts with { and ends with }.

# Optimized Australian prompt for better field extraction accuracy
australian_optimized_prompt: |
  <image>
  You MUST extract ALL product information from this Australian receipt. Look carefully at every line item.

  Extract these seven fields from the provided Australian receipt image:
  1. date_value - The purchase date in DD/MM/YYYY format
  2. store_name_value - The store name (WOOLWORTHS, COLES, ALDI, IGA, etc.)
  3. tax_value - The GST amount (look for "GST", "TAX", or 10% calculation)
  4. total_value - The final total amount
  5. prod_item_value - ALL products purchased (as a list)
  6. prod_quantity_value - Quantity for each product (as a list, same order as products)
  7. prod_price_value - Price for each product (as a list, same order as products)

  CRITICAL: You MUST extract ALL products, quantities, and prices. Do not leave these lists empty.

  Return ONLY valid JSON in this exact format:

  {
  "date_value": "16/03/2023",
  "store_name_value": "WOOLWORTHS",
  "tax_value": "3.82",
  "total_value": "42.08",
  "prod_item_value": [
  "MILK 2L",
  "BREAD MULTIGRAIN",
  "EGGS FREE RANGE 12PK"
  ],
  "prod_quantity_value": [
  "1",
  "2",
  "1"
  ],
  "prod_price_value": [
  "4.50",
  "8.00",
  "7.60"
  ]
  }

  REQUIREMENTS:
  - Extract the purchase date in DD/MM/YYYY format
  - Extract GST/tax amount (typically 10% in Australia)
  - Extract ALL individual products, quantities, and prices
  - Ensure all three product lists have the same length
  - Use clean values without extra commas or symbols
  - Output ONLY the JSON object, no other text

# ========================================================================
# Prompts from Huaifeng_Test_InternVL.ipynb - Original Test Cases
# ========================================================================

# Conference relevance check prompt
conference_relevance_prompt: |
  <image>
  Is this relevant to a claim about attending academic conference?

# Business expense relevance check prompt  
business_expense_prompt: |
  <image>
  Is this relevant to a claim about car expense?

# Speaker listing prompt
speaker_list_prompt: |
  <image>
  list all the speakers

# Basic JSON extraction for receipts (company, address, phone, date, ABN, total)
huaifeng_receipt_json_prompt: |
  <image>
  Extract receipt information and return ONLY valid JSON format.

  Required fields:
  - company_name: Store/company name
  - address: Store address (escape newlines as \\n)
  - phone_number: Phone number
  - date: Date in DD/MM/YYYY format
  - ABN: Australian Business Number
  - total_amount: Total amount as number

  Example format:
  {
    "company_name": "WOOLWORTHS",
    "address": "123 Main St, Sydney NSW 2000",
    "phone_number": "(02) 1234 5678",
    "date": "15/06/2024",
    "ABN": "88 000 014 675",
    "total_amount": 45.67
  }

  IMPORTANT: Return ONLY the JSON object. No additional text, explanations, or formatting.

# Multi-receipt JSON extraction prompt
multi_receipt_json_prompt: |
  <image>
  there are two receipts on this image. read the text and return information in JSON format. I need company name, address, phone number, date, ABN, and total amount

# Multi-receipt relevance check prompt
multi_receipt_relevance_prompt: |
  <image>
  there are two receipts on this image. Are these two receipts relevant to a claim about car expense?

# Detailed receipt extraction with item information
detailed_receipt_json_prompt: |
  <image>
  read the text and return information in JSON format. I need company name, address, phone number, date, item name, number of items, item price, and total amount

# Generic document description prompt
document_description_prompt: |
  <image>
  What type of document is this? Provide a brief description.

# Business expense relevance prompt (generic)
expense_relevance_prompt: |
  <image>
  Is this relevant to a business expense claim?

# Minimal simplified prompt to force SROIE schema output
minimal_sroie_prompt: |
  <image>
  Output JSON with these exact keys:
  {
  "date_value": "",
  "store_name_value": "",
  "tax_value": "",
  "total_value": "",
  "prod_item_value": [],
  "prod_quantity_value": [],
  "prod_price_value": []
  }