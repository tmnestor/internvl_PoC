name: internvl_env
# Environment configuration for InternVL Evaluation
# This configuration works for:
# 1. Development on Mac (M1/M2/Intel)
# 2. Deployment on GPU-enabled machines (KFP environment)

channels:
  - pytorch
  - nvidia
  - conda-forge
  - defaults
dependencies:
  # Base dependencies
  - python=3.11  # Required for KFP environment
  - pip=23.0.1
  
  # PyTorch dependencies - configured for Mac development by default
  - pytorch=2.1.0
  - torchvision=0.16.0
  
  # ===== GPU SETTINGS =====
  # DEVELOPMENT ENVIRONMENT (Mac):
  # On Mac, use this:
  - cpuonly
  
  # PRODUCTION ENVIRONMENT (KFP/GPU):
  # When deploying to KFP, comment out 'cpuonly' above
  # and uncomment the line below:
  # - pytorch-cuda=11.8
  # ======================
  
  # Python packages via pip
  - pip:
    # Model dependencies
    - transformers>=4.34.0
    - einops>=0.6.0  # Required for InternVL model
    
    # Core dependencies
    - python-dotenv>=1.0.0
    - numpy>=1.26.0,<2.0.0  # Pin to NumPy 1.26+ for compatibility with compiled modules
    - pillow>=9.4.0
    - pandas>=2.0.0
    - dateparser>=1.1.8
    - nltk>=3.8.1
    - scikit-learn>=1.3.0
    - scikit-image>=0.21.0
    - matplotlib>=3.7.0
    - opencv-python>=4.7.0
    - pyyaml>=6.0.0
    - tqdm>=4.65.0
    
    # Development dependencies
    - ipykernel>=6.0.0         # For Jupyter notebook support
    - ipywidgets>=8.0.0        # For Jupyter notebook widgets
    - ruff>=0.0.270            # For linting
    - pytest>=7.3.1            # For testing
    - pytest-cov>=4.1.0        # For test coverage
    
    # CLI interface dependencies (Priority 2 compliance)
    - typer>=0.16.0            # Modern CLI framework
    - rich>=14.0.0             # Rich console output
    
    # Add KFP specific dependencies below if needed
    
# Usage Instructions:
# -----------------
# Create environment: conda env create -f internvl_env.yml
# Update environment:
# Activate environment: conda activate internvl_env
# Remove environment: conda env remove -n internvl_env
#
# Note: Currently configured for GPU cloud instance with CUDA 11.8
# Note: To switch to CPU-only, comment out the GPU packages and uncomment CPU packages
# Note: For GPU cloud systems, ensure pytorch-cuda version matches your system's CUDA